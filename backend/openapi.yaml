openapi: 3.0.3
info:
  title: Context-Aware Translation API
  description: |
    Full-stack AI-powered literary translation web application API that uses Google Gemini API 
    and OpenRouter to translate novels from English to Korean while maintaining context, 
    character consistency, and literary style.
  version: 1.0.0
  contact:
    name: CAT Support
    url: https://catrans.me

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.catrans.me
    description: Production server

tags:
  - name: Health Check
    description: Service health endpoints
  - name: Translation
    description: Translation service endpoints
  - name: Validation
    description: Translation validation endpoints
  - name: Community
    description: Community board endpoints
  - name: Admin
    description: Admin-only endpoints
  - name: Webhooks
    description: External webhook handlers

paths:
  /:
    get:
      tags:
        - Health Check
      summary: Check service status
      operationId: read_root
      responses:
        '200':
          description: Service is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Translation Service Backend is running!"

  /api/v1/analyze-style:
    post:
      tags:
        - Translation
      summary: Analyze narrative style
      description: Analyzes the narrative style of an uploaded document to extract style parameters
      operationId: analyze_style
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - api_key
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file to analyze
                api_key:
                  type: string
                  description: Gemini or OpenRouter API key
                model_name:
                  type: string
                  default: gemini-2.5-flash-lite
                  description: AI model to use
      responses:
        '200':
          description: Style analysis successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StyleAnalysisResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/analyze-glossary:
    post:
      tags:
        - Translation
      summary: Extract glossary terms
      description: Extracts key terms and their translations from an uploaded document
      operationId: analyze_glossary
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - api_key
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file to analyze
                api_key:
                  type: string
                  description: Gemini or OpenRouter API key
                model_name:
                  type: string
                  default: gemini-2.5-flash-lite
                  description: AI model to use
      responses:
        '200':
          description: Glossary extraction successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlossaryAnalysisResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/jobs:
    get:
      tags:
        - Translation
      summary: List translation jobs
      description: List all translation jobs for the current user
      operationId: list_jobs
      security:
        - ClerkAuth: []
      parameters:
        - name: skip
          in: query
          schema:
            type: integer
            default: 0
          description: Number of jobs to skip
        - name: limit
          in: query
          schema:
            type: integer
            default: 100
          description: Maximum number of jobs to return
      responses:
        '200':
          description: Jobs retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TranslationJob'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/jobs:
    post:
      tags:
        - Translation
      summary: Create translation job
      description: Creates a new translation job by uploading a document and starting the translation process
      operationId: create_job
      security:
        - ClerkAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - api_key
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file to translate (TXT, DOCX, EPUB, PDF, MD)
                api_key:
                  type: string
                  description: Gemini or OpenRouter API key
                model_name:
                  type: string
                  default: gemini-2.5-flash-lite
                  description: AI model to use
                style_data:
                  type: string
                  description: JSON string containing style parameters
                glossary_data:
                  type: string
                  description: JSON string containing glossary terms
                segment_size:
                  type: integer
                  default: 15000
                  description: Target segment size for translation
      responses:
        '200':
          description: Translation job created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationJob'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/jobs/{job_id}:
    get:
      tags:
        - Translation
      summary: Get translation job
      description: Retrieves the translation job details including status and progress
      operationId: get_job
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: Job status retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationJob'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      tags:
        - Translation
      summary: Delete translation job
      description: Deletes a translation job and its associated files
      operationId: delete_job
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '204':
          description: Job deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/download/{job_id}:
    get:
      tags:
        - Translation
      summary: Download job output (legacy)
      description: Legacy endpoint for downloading translation output
      operationId: download_job_output_legacy
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: File download successful
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/epub+zip:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/output:
    get:
      tags:
        - Translation
      summary: Download job output
      description: Downloads the output file of a completed translation job
      operationId: download_job_output
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: File download successful
          content:
            text/plain:
              schema:
                type: string
                format: binary
            application/epub+zip:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/logs/{log_type}:
    get:
      tags:
        - Translation
      summary: Download job logs
      description: Downloads debug log files for a translation job
      operationId: download_job_log
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
        - name: log_type
          in: path
          required: true
          schema:
            type: string
            enum: [prompts, context]
          description: Type of log file to download
      responses:
        '200':
          description: Log file download successful
          content:
            text/plain:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/glossary:
    get:
      tags:
        - Translation
      summary: Get job glossary
      description: Retrieves the final glossary for a completed translation job
      operationId: get_job_glossary
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: Glossary retrieved
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/segments:
    get:
      tags:
        - Translation
      summary: Get job segments
      description: Get the segmented translation data for a completed translation job
      operationId: get_job_segments
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: Segments retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: integer
                  filename:
                    type: string
                  segments:
                    type: array
                    items:
                      type: object
                  total_segments:
                    type: integer
                  completed_at:
                    type: string
                    format: date-time
                    nullable: true
                  message:
                    type: string
                    nullable: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/jobs/{job_id}/content:
    get:
      tags:
        - Translation
      summary: Get job content
      description: Get the translated content as text for a completed translation job
      operationId: get_job_content
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: Content retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: integer
                  filename:
                    type: string
                  content:
                    type: string
                  source_content:
                    type: string
                    nullable: true
                  completed_at:
                    type: string
                    format: date-time
                    nullable: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/jobs/{job_id}/validation:
    put:
      tags:
        - Validation
      summary: Trigger validation
      description: Starts validation on a completed translation job
      operationId: validate_job
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationRequest'
      responses:
        '200':
          description: Validation started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_id:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/validation-report:
    get:
      tags:
        - Validation
      summary: Get validation report
      description: Retrieves the validation report for a job
      operationId: get_validation_report
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: Validation report retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationReport'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/post-edit:
    put:
      tags:
        - Validation
      summary: Trigger post-editing
      description: Starts post-editing on a validated translation job
      operationId: post_edit_job
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEditRequest'
      responses:
        '200':
          description: Post-editing started
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  job_id:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/jobs/{job_id}/post-edit-log:
    get:
      tags:
        - Validation
      summary: Get post-edit log
      description: Retrieves the post-edit log for a job
      operationId: get_post_edit_log
      security:
        - ClerkAuth: []
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
          description: Translation job ID
      responses:
        '200':
          description: Post-edit log retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEditLog'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/webhooks/clerk:
    post:
      tags:
        - Webhooks
      summary: Handle Clerk webhook
      description: Processes user lifecycle events from Clerk
      operationId: handle_clerk_webhook
      parameters:
        - name: svix-id
          in: header
          required: true
          schema:
            type: string
        - name: svix-timestamp
          in: header
          required: true
          schema:
            type: string
        - name: svix-signature
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [user.created, user.updated, user.deleted]
                data:
                  type: object
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/announcements/stream:
    get:
      tags:
        - Admin
      summary: Stream announcements
      description: Server-Sent Events stream for real-time announcements
      operationId: stream_announcements
      responses:
        '200':
          description: SSE stream established
          content:
            text/event-stream:
              schema:
                type: string
                example: "data: {\"id\": 1, \"message\": \"공지사항\", \"is_active\": true, \"created_at\": \"2024-01-01T00:00:00\"}\n\n"

  /api/v1/admin/announcements:
    post:
      tags:
        - Admin
      summary: Create announcement
      description: Creates a new announcement (admin only)
      operationId: create_new_announcement
      security:
        - AdminSecret: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnnouncementCreate'
      responses:
        '200':
          description: Announcement created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/admin/announcements/{announcement_id}/deactivate:
    put:
      tags:
        - Admin
      summary: Deactivate announcement
      description: Deactivates a specific announcement
      operationId: deactivate_existing_announcement
      security:
        - AdminSecret: []
      parameters:
        - name: announcement_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Announcement deactivated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Announcement'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/admin/announcements/deactivate-all:
    put:
      tags:
        - Admin
      summary: Deactivate all announcements
      description: Deactivates all active announcements
      operationId: deactivate_all_announcements
      security:
        - AdminSecret: []
      responses:
        '200':
          description: All announcements deactivated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  deactivated_count:
                    type: integer
                  success:
                    type: boolean
        '403':
          $ref: '#/components/responses/Forbidden'

  /api/v1/community/upload-image:
    post:
      tags:
        - Community
      summary: Upload image
      description: Uploads an image for use in posts
      operationId: upload_image
      security:
        - ClerkAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: Image file (JPEG, PNG, GIF, WebP, max 10MB)
      responses:
        '200':
          description: Image uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  filename:
                    type: string
                  original_name:
                    type: string
                  size:
                    type: integer
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/community/categories:
    get:
      tags:
        - Community
      summary: Get post categories
      description: Retrieves all post categories
      operationId: get_categories
      responses:
        '200':
          description: Categories retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostCategory'

  /api/v1/community/categories/overview:
    get:
      tags:
        - Community
      summary: Get categories with recent posts
      description: Retrieves categories with their recent posts for overview
      operationId: get_categories_with_recent_posts
      responses:
        '200':
          description: Categories overview retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryOverview'

  /api/v1/community/posts:
    get:
      tags:
        - Community
      summary: Get posts
      description: Retrieves posts with optional filtering
      operationId: get_posts
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: Category name to filter by
        - name: skip
          in: query
          schema:
            type: integer
            default: 0
          description: Number of posts to skip
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
          description: Maximum number of posts to return
        - name: search
          in: query
          schema:
            type: string
          description: Search query for posts
      responses:
        '200':
          description: Posts retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostList'
    post:
      tags:
        - Community
      summary: Create post
      description: Creates a new post
      operationId: create_post
      security:
        - ClerkAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        '200':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/community/posts/{post_id}:
    get:
      tags:
        - Community
      summary: Get post
      description: Retrieves a specific post
      operationId: get_post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - Community
      summary: Update post
      description: Updates an existing post
      operationId: update_post
      security:
        - ClerkAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUpdate'
      responses:
        '200':
          description: Post updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Community
      summary: Delete post
      description: Deletes a post
      operationId: delete_post
      security:
        - ClerkAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Post deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/community/posts/{post_id}/view:
    post:
      tags:
        - Community
      summary: Increment view count
      description: Increments the view count for a post
      operationId: increment_post_view
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: View count incremented
          content:
            application/json:
              schema:
                type: object
                properties:
                  view_count:
                    type: integer
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/community/posts/{post_id}/comments:
    get:
      tags:
        - Community
      summary: Get comments
      description: Retrieves comments for a post
      operationId: get_comments
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Comments retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - Community
      summary: Create comment
      description: Creates a new comment on a post
      operationId: create_comment
      security:
        - ClerkAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '200':
          description: Comment created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/community/comments/{comment_id}:
    put:
      tags:
        - Community
      summary: Update comment
      description: Updates an existing comment
      operationId: update_comment
      security:
        - ClerkAuth: []
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdate'
      responses:
        '200':
          description: Comment updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - Community
      summary: Delete comment
      description: Deletes a comment
      operationId: delete_comment
      security:
        - ClerkAuth: []
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Comment deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'

  /api/v1/admin/community/init-categories:
    post:
      tags:
        - Admin
      summary: Initialize categories
      description: Initializes default post categories
      operationId: initialize_categories
      security:
        - AdminSecret: []
      responses:
        '200':
          description: Categories initialized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  categories:
                    type: array
                    items:
                      $ref: '#/components/schemas/PostCategory'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  securitySchemes:
    ClerkAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Clerk authentication token
    AdminSecret:
      type: apiKey
      in: header
      name: X-Admin-Secret
      description: Admin secret key for admin operations

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        clerk_user_id:
          type: string
        email:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        role:
          type: string
          default: user
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          nullable: true

    TranslationJob:
      type: object
      properties:
        id:
          type: integer
        filename:
          type: string
        status:
          type: string
          enum: [PENDING, PROCESSING, COMPLETED, FAILED]
        progress:
          type: integer
          minimum: 0
          maximum: 100
        created_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        error_message:
          type: string
          nullable: true
        owner_id:
          type: integer
          nullable: true
        validation_enabled:
          type: boolean
          nullable: true
        validation_status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED, FAILED]
          nullable: true
        validation_progress:
          type: integer
          minimum: 0
          maximum: 100
          nullable: true
        validation_sample_rate:
          type: integer
          minimum: 0
          maximum: 100
          nullable: true
        quick_validation:
          type: boolean
          nullable: true
        validation_completed_at:
          type: string
          format: date-time
          nullable: true
        post_edit_enabled:
          type: boolean
          nullable: true
        post_edit_status:
          type: string
          enum: [PENDING, IN_PROGRESS, COMPLETED, FAILED]
          nullable: true
        post_edit_completed_at:
          type: string
          format: date-time
          nullable: true

    StyleAnalysisResponse:
      type: object
      required:
        - protagonist_name
        - narration_style_endings
        - tone_keywords
        - stylistic_rule
      properties:
        protagonist_name:
          type: string
        narration_style_endings:
          type: string
        tone_keywords:
          type: string
        stylistic_rule:
          type: string

    GlossaryTerm:
      type: object
      required:
        - term
        - translation
      properties:
        term:
          type: string
        translation:
          type: string

    GlossaryAnalysisResponse:
      type: object
      required:
        - glossary
      properties:
        glossary:
          type: array
          items:
            $ref: '#/components/schemas/GlossaryTerm'

    ValidationReport:
      type: object
      properties:
        summary:
          type: object
          additionalProperties: true
        detailed_results:
          type: array
          items:
            type: object
            properties:
              segment_index:
                type: integer
              status:
                type: string
                enum: [PASS, FAIL, ERROR]
              source_preview:
                type: string
              translated_preview:
                type: string
              structured_cases:
                type: array
                items:
                  type: object
                  properties:
                    current_korean_sentence:
                      type: string
                    problematic_source_sentence:
                      type: string
                    reason:
                      type: string
                    corrected_korean_sentence:
                      type: string
                    dimension:
                      type: string
                    severity:
                      type: integer
                    tags:
                      type: array
                      items:
                        type: string

    PostEditLog:
      type: object
      properties:
        summary:
          type: object
          properties:
            segments_edited:
              type: integer
            total_segments:
              type: integer
            edit_percentage:
              type: number
        segments:
          type: array
          items:
            type: object
            properties:
              segment_index:
                type: integer
              source_text:
                type: string
              original_translation:
                type: string
              edited_translation:
                type: string
              was_edited:
                type: boolean
              validation_status:
                type: string
              structured_cases:
                type: array
                items:
                  type: object
              changes_made:
                type: object
                properties:
                  text_changed:
                    type: boolean

    AnnouncementCreate:
      type: object
      required:
        - message
      properties:
        message:
          type: string
        is_active:
          type: boolean
          default: true

    Announcement:
      type: object
      properties:
        id:
          type: integer
        message:
          type: string
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time

    PostCategory:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
          nullable: true
        is_admin_only:
          type: boolean
        order:
          type: integer
        created_at:
          type: string
          format: date-time

    PostCreate:
      type: object
      required:
        - title
        - content
        - category_id
      properties:
        title:
          type: string
        content:
          type: string
        category_id:
          type: integer
        is_pinned:
          type: boolean
          default: false
        is_private:
          type: boolean
          default: false
        images:
          type: array
          items:
            type: string

    PostUpdate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        is_pinned:
          type: boolean
        images:
          type: array
          items:
            type: string

    PostList:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        author:
          $ref: '#/components/schemas/User'
        category:
          $ref: '#/components/schemas/PostCategory'
        is_pinned:
          type: boolean
        is_private:
          type: boolean
        view_count:
          type: integer
        images:
          type: array
          items:
            type: string
        comment_count:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
        author:
          $ref: '#/components/schemas/User'
        category:
          $ref: '#/components/schemas/PostCategory'
        is_pinned:
          type: boolean
        is_private:
          type: boolean
        view_count:
          type: integer
        images:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CommentCreate:
      type: object
      required:
        - content
        - post_id
      properties:
        content:
          type: string
        post_id:
          type: integer
        parent_id:
          type: integer
          nullable: true
        is_private:
          type: boolean
          default: false

    CommentUpdate:
      type: object
      required:
        - content
      properties:
        content:
          type: string

    Comment:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        author:
          $ref: '#/components/schemas/User'
        post_id:
          type: integer
        parent_id:
          type: integer
          nullable: true
        is_private:
          type: boolean
        replies:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CategoryOverview:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
          nullable: true
        is_admin_only:
          type: boolean
        order:
          type: integer
        created_at:
          type: string
          format: date-time
        recent_posts:
          type: array
          items:
            type: object
        total_posts:
          type: integer

    ValidationRequest:
      type: object
      properties:
        quick_validation:
          type: boolean
          default: false
          description: Use quick validation mode
        validation_sample_rate:
          type: number
          format: float
          default: 1.0
          minimum: 0.0
          maximum: 1.0
          description: Sample rate for validation (0.0 to 1.0)

    PostEditRequest:
      type: object
      properties:
        selected_cases:
          type: object
          additionalProperties:
            type: array
            items:
              type: boolean
          description: Mapping of segment_index to a boolean array mask for structured cases

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Not authenticated

    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Not authorized

    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Resource not found

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string