feat: 상태 저장 및 이어하기 기능 구현

- 번역 작업이 중간에 실패하거나 중단될 경우, 처음부터 다시 시작해야 하는 문제를 해결.
- `models.py`: `TranslationJob` 테이블에 `last_successful_segment`와 `context_snapshot_json` 컬럼을 추가하여 상태 저장 공간 마련.
- `crud.py`: `update_job_state` 함수를 추가하여 DB에 현재 진행 상태(세그먼트 인덱스, 컨텍스트)를 업데이트하는 로직 구현.
- `engine.py`: 번역 엔진이 작업 시작 시 DB에서 상태를 로드하고, 매 세그먼트 번역 성공 시 상태를 저장하도록 수정.
- `job.py` & `main.py`: 작업 시작 시 "이어하기" 여부를 판단하여, 이어하는 작업일 경우 기존 출력 파일을 삭제하지 않도록 로직 변경.